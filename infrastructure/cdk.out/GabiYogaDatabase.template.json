{
 "Resources": {
  "DatabaseSecurityGroup7319C0F6": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Allow database connections",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::ImportValue": "GabiYogaNetwork:ExportsOutputFnGetAttGabiYogaFreeVpcA59DDC13CidrBlock668DB7C5"
      },
      "Description": "Allow MySQL connections from within the VPC",
      "FromPort": 3306,
      "IpProtocol": "tcp",
      "ToPort": 3306
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcA59DDC1394F0D6DE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaDatabase/DatabaseSecurityGroup/Resource"
   }
  },
  "DatabaseCredentials8547B3E7": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "GenerateStringKey": "password",
     "IncludeSpace": false,
     "PasswordLength": 16,
     "SecretStringTemplate": "{\"username\":\"admin\"}"
    },
    "Name": "gabi-yoga-db-credentials",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GabiYogaDatabase/DatabaseCredentials/Resource"
   }
  },
  "DatabaseCredentialsAttachment7BAB329F": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "DatabaseCredentials8547B3E7"
    },
    "TargetId": {
     "Ref": "DatabaseB269D8BB"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaDatabase/DatabaseCredentials/Attachment/Resource"
   }
  },
  "DatabaseSubnetGroup7D60F180": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for Database database",
    "SubnetIds": [
     {
      "Fn::ImportValue": "GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcisolatedSubnet1Subnet38080C97B84B7E08"
     },
     {
      "Fn::ImportValue": "GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcisolatedSubnet2Subnet5F4D55DA777E03BA"
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaDatabase/Database/SubnetGroup/Default"
   }
  },
  "DatabaseB269D8BB": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "AllowMajorVersionUpgrade": false,
    "AutoMinorVersionUpgrade": true,
    "BackupRetentionPeriod": 1,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t4g.micro",
    "DBName": "yoga",
    "DBSubnetGroupName": {
     "Ref": "DatabaseSubnetGroup7D60F180"
    },
    "DeleteAutomatedBackups": true,
    "DeletionProtection": false,
    "Engine": "mysql",
    "EngineVersion": "8.0",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "DatabaseCredentials8547B3E7"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "DatabaseCredentials8547B3E7"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MaxAllocatedStorage": 20,
    "MultiAZ": false,
    "PubliclyAccessible": false,
    "StorageType": "gp2",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ],
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "DatabaseSecurityGroup7319C0F6",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "GabiYogaDatabase/Database/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2WOzQrCMBCEn6X3NNqc9KgWxJNgvcs2XWtam5Zko0jJu5taFX9gYXZmP4YVPJkLPo3gamNZ1PFZ5bzPCGTNQnToUYrgUTqj6LY2revY6qi/As8sSoNkG9BQonnwwT/BYRtlD6ZEWlBoPzWoP4Dfi2emsLxPgSAHixttCbRElrlcI73fSJd/wQv1fvBbR50LbbotkFd2cklmPIyIKqtUbJwm1SDfjXoHBLQXmwsBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaDatabase/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "DatabaseEndpoint": {
   "Description": "Database endpoint",
   "Value": {
    "Fn::GetAtt": [
     "DatabaseB269D8BB",
     "Endpoint.Address"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}