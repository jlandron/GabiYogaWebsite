{
 "Resources": {
  "ArtifactBucket7410C9EF": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/ArtifactBucket/Resource"
   }
  },
  "ArtifactBucketPolicy4B4B7752": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ArtifactBucket7410C9EF"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/ArtifactBucket/Policy/Resource"
   }
  },
  "ArtifactBucketAutoDeleteObjectsCustomResource0BB47FD6": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ArtifactBucket7410C9EF"
    }
   },
   "DependsOn": [
    "ArtifactBucketPolicy4B4B7752"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/ArtifactBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-891709159344-us-west-2",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "ArtifactBucket7410C9EF"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "PipelineRoleD68726F7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Role/Resource"
   }
  },
  "PipelineRoleDefaultPolicyC7A05455": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineSourceGitHubSourceCodePipelineActionRole3B2287CE",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineBuildBuildActionCodePipelineActionRoleBF1F5618",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineDeployRefreshInstancesCodePipelineActionRoleA3A45BCF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineRoleDefaultPolicyC7A05455",
    "Roles": [
     {
      "Ref": "PipelineRoleD68726F7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "PipelineC660917D": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "Location": {
      "Ref": "ArtifactBucket7410C9EF"
     },
     "Type": "S3"
    },
    "Name": "GabiYoga-CI-CD-Pipeline",
    "RestartExecutionOnUpdate": true,
    "RoleArn": {
     "Fn::GetAtt": [
      "PipelineRoleD68726F7",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "AWS",
         "Provider": "CodeStarSourceConnection",
         "Version": "1"
        },
        "Configuration": {
         "ConnectionArn": {
          "Ref": "GitHubConnectionArn"
         },
         "FullRepositoryId": "jlandron/GabiYogaWebsite",
         "BranchName": "main",
         "DetectChanges": true
        },
        "Name": "GitHub_Source",
        "OutputArtifacts": [
         {
          "Name": "SourceCode"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineSourceGitHubSourceCodePipelineActionRole3B2287CE",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "BuildProject097C5DB7"
         }
        },
        "InputArtifacts": [
         {
          "Name": "SourceCode"
         }
        ],
        "Name": "BuildAction",
        "OutputArtifacts": [
         {
          "Name": "BuildOutput"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineBuildBuildActionCodePipelineActionRoleBF1F5618",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Invoke",
         "Owner": "AWS",
         "Provider": "Lambda",
         "Version": "1"
        },
        "Configuration": {
         "FunctionName": {
          "Ref": "InstanceRefreshFunction7CD0FF84"
         },
         "UserParameters": "{\"stackName\":\"GabiYogaWebApp\"}"
        },
        "Name": "RefreshInstances",
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineDeployRefreshInstancesCodePipelineActionRoleA3A45BCF",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Deploy"
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "DependsOn": [
    "PipelineRoleDefaultPolicyC7A05455",
    "PipelineRoleD68726F7"
   ],
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Resource"
   }
  },
  "PipelineSourceGitHubSourceCodePipelineActionRole3B2287CE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PipelineRoleD68726F7",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Source/GitHub_Source/CodePipelineActionRole/Resource"
   }
  },
  "PipelineSourceGitHubSourceCodePipelineActionRoleDefaultPolicyE64B1C38": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codestar-connections:UseConnection",
       "Effect": "Allow",
       "Resource": {
        "Ref": "GitHubConnectionArn"
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "ArtifactBucket7410C9EF",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineSourceGitHubSourceCodePipelineActionRoleDefaultPolicyE64B1C38",
    "Roles": [
     {
      "Ref": "PipelineSourceGitHubSourceCodePipelineActionRole3B2287CE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Source/GitHub_Source/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "PipelineBuildBuildActionCodePipelineActionRoleBF1F5618": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PipelineRoleD68726F7",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Build/BuildAction/CodePipelineActionRole/Resource"
   }
  },
  "PipelineBuildBuildActionCodePipelineActionRoleDefaultPolicy27F22ECB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BuildProject097C5DB7",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineBuildBuildActionCodePipelineActionRoleDefaultPolicy27F22ECB",
    "Roles": [
     {
      "Ref": "PipelineBuildBuildActionCodePipelineActionRoleBF1F5618"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "PipelineDeployRefreshInstancesCodePipelineActionRoleA3A45BCF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PipelineRoleD68726F7",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Deploy/RefreshInstances/CodePipelineActionRole/Resource"
   }
  },
  "PipelineDeployRefreshInstancesCodePipelineActionRoleDefaultPolicy967AF9EE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:ListFunctions",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "InstanceRefreshFunction7CD0FF84",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "InstanceRefreshFunction7CD0FF84",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineDeployRefreshInstancesCodePipelineActionRoleDefaultPolicy967AF9EE",
    "Roles": [
     {
      "Ref": "PipelineDeployRefreshInstancesCodePipelineActionRoleA3A45BCF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/Pipeline/Deploy/RefreshInstances/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "BuildProjectRoleAA92C755": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/BuildProject/Role/Resource"
   }
  },
  "BuildProjectRoleDefaultPolicy3E9F248C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:us-west-2:891709159344:log-group:/aws/codebuild/",
           {
            "Ref": "BuildProject097C5DB7"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:us-west-2:891709159344:log-group:/aws/codebuild/",
           {
            "Ref": "BuildProject097C5DB7"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:us-west-2:891709159344:report-group/",
          {
           "Ref": "BuildProject097C5DB7"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BuildProjectRoleDefaultPolicy3E9F248C",
    "Roles": [
     {
      "Ref": "BuildProjectRoleAA92C755"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/BuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "BuildProject097C5DB7": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Modes": [
      "LOCAL_SOURCE_CACHE"
     ],
     "Type": "LOCAL"
    },
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/amazonlinux2-x86_64-standard:4.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "BuildProjectRoleAA92C755",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"nodejs\": \"16\"\n      },\n      \"commands\": [\n        \"npm install\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"npm run build\",\n        \"npm test || echo \\\"No tests specified\\\"\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \".\",\n    \"files\": [\n      \"**/*\"\n    ]\n  }\n}",
     "Type": "CODEPIPELINE"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ],
    "TimeoutInMinutes": 15
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/BuildProject/Resource"
   }
  },
  "InstanceRefreshFunctionServiceRole081F4DB9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/InstanceRefreshFunction/ServiceRole/Resource"
   }
  },
  "InstanceRefreshFunctionServiceRoleDefaultPolicy72F04DE0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudformation:DescribeStackResources",
        "autoscaling:StartInstanceRefresh",
        "autoscaling:DescribeAutoScalingGroups"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "codepipeline:PutJobSuccessResult",
        "codepipeline:PutJobFailureResult"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstanceRefreshFunctionServiceRoleDefaultPolicy72F04DE0",
    "Roles": [
     {
      "Ref": "InstanceRefreshFunctionServiceRole081F4DB9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/InstanceRefreshFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "InstanceRefreshFunction7CD0FF84": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n        const AWS = require('aws-sdk');\n        const cloudformation = new AWS.CloudFormation();\n        const autoscaling = new AWS.AutoScaling();\n\n        exports.handler = async (event) => {\n          try {\n            console.log('Getting ASG name from CloudFormation stack');\n            // Get ASG physical ID from CloudFormation\n            const stackName = 'GabiYogaWebApp';\n            const cfnResponse = await cloudformation.describeStackResources({\n              StackName: stackName,\n              LogicalResourceId: 'WebServerASG'\n            }).promise();\n            \n            if (!cfnResponse.StackResources || cfnResponse.StackResources.length === 0) {\n              throw new Error('Could not find Auto Scaling Group in CloudFormation stack');\n            }\n            \n            const asgName = cfnResponse.StackResources[0].PhysicalResourceId;\n            console.log(`Found ASG: ${asgName}`);\n            \n            // Start instance refresh\n            const refreshResponse = await autoscaling.startInstanceRefresh({\n              AutoScalingGroupName: asgName,\n              Preferences: {\n                MinHealthyPercentage: 50,\n                InstanceWarmup: 300\n              }\n            }).promise();\n            \n            console.log(`Instance refresh started with ID: ${refreshResponse.InstanceRefreshId}`);\n            return {\n              statusCode: 200,\n              body: JSON.stringify({\n                message: 'Instance refresh initiated successfully',\n                refreshId: refreshResponse.InstanceRefreshId\n              })\n            };\n          } catch (error) {\n            console.error('Error:', error);\n            return {\n              statusCode: 500,\n              body: JSON.stringify({\n                message: 'Error initiating instance refresh',\n                error: error.message\n              })\n            };\n          }\n        };\n      "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "InstanceRefreshFunctionServiceRole081F4DB9",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "InstanceRefreshFunctionServiceRoleDefaultPolicy72F04DE0",
    "InstanceRefreshFunctionServiceRole081F4DB9"
   ],
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/InstanceRefreshFunction/Resource"
   }
  },
  "InstanceRefreshFunctionLogRetentionA6FB29AF": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "InstanceRefreshFunction7CD0FF84"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/InstanceRefreshFunction/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs20.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-891709159344-us-west-2",
     "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQ3UrEMBCFn2Xv09Ht3uilu+CVYKkPsKTpWKZNk5JJViT03U2brlUInG/mMH8p4fhcwuNBfnGh2qHQ1ED88FINIqWukU8Qz0EN6MXl02yUpbKa1Pee3uIcnCXjLJRtcaIJNRmEWG20lNx5FiRHiLXVa3rVvXGm3KcJpNu9SeVsj2rdasNZaDk2rYT4GozyZM1i3jm5tmN4s12NHs1q8+kqmdEzvCwyi0tgb8ca2Qan8kK//M9KI2/UolvOFGtx+rOOTCf+FlfSyTFNc0vwHvwU0gyTboGeH27HJ0ivPPRMVLiQVhoR6qw/cjoeJJcBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaCICD/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "GitHubConnectionArn": {
   "Type": "String",
   "Description": "ARN of the GitHub connection created in the AWS console"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "PipelineArn": {
   "Description": "The ARN of the CI/CD pipeline",
   "Value": {
    "Fn::Join": [
     "",
     [
      "arn:",
      {
       "Ref": "AWS::Partition"
      },
      ":codepipeline:us-west-2:891709159344:",
      {
       "Ref": "PipelineC660917D"
      }
     ]
    ]
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}