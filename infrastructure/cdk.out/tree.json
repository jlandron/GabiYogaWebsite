{"version":"tree-0.1","tree":{"id":"App","path":"","children":{"GabiYogaNetwork":{"id":"GabiYogaNetwork","path":"GabiYogaNetwork","children":{"GabiYogaFreeVpc":{"id":"GabiYogaFreeVpc","path":"GabiYogaNetwork/GabiYogaFreeVpc","children":{"Resource":{"id":"Resource","path":"GabiYogaNetwork/GabiYogaFreeVpc/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::VPC","aws:cdk:cloudformation:props":{"cidrBlock":"10.1.0.0/16","enableDnsHostnames":true,"enableDnsSupport":true,"instanceTenancy":"default","tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnVPC","version":"2.192.0"}},"publicSubnet1":{"id":"publicSubnet1","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet1","children":{"Subnet":{"id":"Subnet","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet1/Subnet","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::Subnet","aws:cdk:cloudformation:props":{"availabilityZone":"us-west-2a","cidrBlock":"10.1.0.0/24","mapPublicIpOnLaunch":true,"tags":[{"key":"aws-cdk:subnet-name","value":"public"},{"key":"aws-cdk:subnet-type","value":"Public"},{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet1"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSubnet","version":"2.192.0"}},"Acl":{"id":"Acl","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet1/Acl","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"RouteTable":{"id":"RouteTable","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet1/RouteTable","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::RouteTable","aws:cdk:cloudformation:props":{"tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet1"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnRouteTable","version":"2.192.0"}},"RouteTableAssociation":{"id":"RouteTableAssociation","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet1/RouteTableAssociation","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::SubnetRouteTableAssociation","aws:cdk:cloudformation:props":{"routeTableId":{"Ref":"GabiYogaFreeVpcpublicSubnet1RouteTableC52730DE"},"subnetId":{"Ref":"GabiYogaFreeVpcpublicSubnet1Subnet46DE1B15"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation","version":"2.192.0"}},"DefaultRoute":{"id":"DefaultRoute","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet1/DefaultRoute","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::Route","aws:cdk:cloudformation:props":{"destinationCidrBlock":"0.0.0.0/0","gatewayId":{"Ref":"GabiYogaFreeVpcIGW2790D0A5"},"routeTableId":{"Ref":"GabiYogaFreeVpcpublicSubnet1RouteTableC52730DE"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnRoute","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.PublicSubnet","version":"2.192.0","metadata":[]}},"publicSubnet2":{"id":"publicSubnet2","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet2","children":{"Subnet":{"id":"Subnet","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet2/Subnet","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::Subnet","aws:cdk:cloudformation:props":{"availabilityZone":"us-west-2b","cidrBlock":"10.1.1.0/24","mapPublicIpOnLaunch":true,"tags":[{"key":"aws-cdk:subnet-name","value":"public"},{"key":"aws-cdk:subnet-type","value":"Public"},{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet2"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSubnet","version":"2.192.0"}},"Acl":{"id":"Acl","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet2/Acl","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"RouteTable":{"id":"RouteTable","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet2/RouteTable","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::RouteTable","aws:cdk:cloudformation:props":{"tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet2"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnRouteTable","version":"2.192.0"}},"RouteTableAssociation":{"id":"RouteTableAssociation","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet2/RouteTableAssociation","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::SubnetRouteTableAssociation","aws:cdk:cloudformation:props":{"routeTableId":{"Ref":"GabiYogaFreeVpcpublicSubnet2RouteTable06592968"},"subnetId":{"Ref":"GabiYogaFreeVpcpublicSubnet2SubnetFC1D6654"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation","version":"2.192.0"}},"DefaultRoute":{"id":"DefaultRoute","path":"GabiYogaNetwork/GabiYogaFreeVpc/publicSubnet2/DefaultRoute","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::Route","aws:cdk:cloudformation:props":{"destinationCidrBlock":"0.0.0.0/0","gatewayId":{"Ref":"GabiYogaFreeVpcIGW2790D0A5"},"routeTableId":{"Ref":"GabiYogaFreeVpcpublicSubnet2RouteTable06592968"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnRoute","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.PublicSubnet","version":"2.192.0","metadata":[]}},"isolatedSubnet1":{"id":"isolatedSubnet1","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet1","children":{"Subnet":{"id":"Subnet","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet1/Subnet","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::Subnet","aws:cdk:cloudformation:props":{"availabilityZone":"us-west-2a","cidrBlock":"10.1.2.0/24","mapPublicIpOnLaunch":false,"tags":[{"key":"aws-cdk:subnet-name","value":"isolated"},{"key":"aws-cdk:subnet-type","value":"Isolated"},{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet1"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSubnet","version":"2.192.0"}},"Acl":{"id":"Acl","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet1/Acl","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"RouteTable":{"id":"RouteTable","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet1/RouteTable","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::RouteTable","aws:cdk:cloudformation:props":{"tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet1"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnRouteTable","version":"2.192.0"}},"RouteTableAssociation":{"id":"RouteTableAssociation","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet1/RouteTableAssociation","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::SubnetRouteTableAssociation","aws:cdk:cloudformation:props":{"routeTableId":{"Ref":"GabiYogaFreeVpcisolatedSubnet1RouteTable5A57B848"},"subnetId":{"Ref":"GabiYogaFreeVpcisolatedSubnet1Subnet38080C97"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.PrivateSubnet","version":"2.192.0","metadata":[]}},"isolatedSubnet2":{"id":"isolatedSubnet2","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet2","children":{"Subnet":{"id":"Subnet","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet2/Subnet","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::Subnet","aws:cdk:cloudformation:props":{"availabilityZone":"us-west-2b","cidrBlock":"10.1.3.0/24","mapPublicIpOnLaunch":false,"tags":[{"key":"aws-cdk:subnet-name","value":"isolated"},{"key":"aws-cdk:subnet-type","value":"Isolated"},{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet2"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSubnet","version":"2.192.0"}},"Acl":{"id":"Acl","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet2/Acl","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"RouteTable":{"id":"RouteTable","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet2/RouteTable","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::RouteTable","aws:cdk:cloudformation:props":{"tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet2"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnRouteTable","version":"2.192.0"}},"RouteTableAssociation":{"id":"RouteTableAssociation","path":"GabiYogaNetwork/GabiYogaFreeVpc/isolatedSubnet2/RouteTableAssociation","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::SubnetRouteTableAssociation","aws:cdk:cloudformation:props":{"routeTableId":{"Ref":"GabiYogaFreeVpcisolatedSubnet2RouteTableC279AB3F"},"subnetId":{"Ref":"GabiYogaFreeVpcisolatedSubnet2Subnet5F4D55DA"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.PrivateSubnet","version":"2.192.0","metadata":[]}},"IGW":{"id":"IGW","path":"GabiYogaNetwork/GabiYogaFreeVpc/IGW","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::InternetGateway","aws:cdk:cloudformation:props":{"tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaNetwork/GabiYogaFreeVpc"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnInternetGateway","version":"2.192.0"}},"VPCGW":{"id":"VPCGW","path":"GabiYogaNetwork/GabiYogaFreeVpc/VPCGW","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::VPCGatewayAttachment","aws:cdk:cloudformation:props":{"internetGatewayId":{"Ref":"GabiYogaFreeVpcIGW2790D0A5"},"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.Vpc","version":"2.192.0","metadata":[]}},"WebSecurityGroup":{"id":"WebSecurityGroup","path":"GabiYogaNetwork/WebSecurityGroup","children":{"Resource":{"id":"Resource","path":"GabiYogaNetwork/WebSecurityGroup/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::SecurityGroup","aws:cdk:cloudformation:props":{"groupDescription":"Allow web traffic","securityGroupEgress":[{"cidrIp":"0.0.0.0/0","description":"Allow all outbound traffic by default","ipProtocol":"-1"}],"securityGroupIngress":[{"cidrIp":"0.0.0.0/0","ipProtocol":"tcp","fromPort":80,"toPort":80,"description":"Allow HTTP traffic"},{"cidrIp":"0.0.0.0/0","ipProtocol":"tcp","fromPort":443,"toPort":443,"description":"Allow HTTPS traffic"}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Ref":"GabiYogaFreeVpcA59DDC13"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSecurityGroup","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.SecurityGroup","version":"2.192.0","metadata":[]}},"VpcId":{"id":"VpcId","path":"GabiYogaNetwork/VpcId","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CDKMetadata":{"id":"CDKMetadata","path":"GabiYogaNetwork/CDKMetadata","children":{"Default":{"id":"Default","path":"GabiYogaNetwork/CDKMetadata/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"Exports":{"id":"Exports","path":"GabiYogaNetwork/Exports","children":{"Output{\"Fn::GetAtt\":[\"GabiYogaFreeVpcA59DDC13\",\"CidrBlock\"]}":{"id":"Output{\"Fn::GetAtt\":[\"GabiYogaFreeVpcA59DDC13\",\"CidrBlock\"]}","path":"GabiYogaNetwork/Exports/Output{\"Fn::GetAtt\":[\"GabiYogaFreeVpcA59DDC13\",\"CidrBlock\"]}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"Output{\"Ref\":\"GabiYogaFreeVpcA59DDC13\"}":{"id":"Output{\"Ref\":\"GabiYogaFreeVpcA59DDC13\"}","path":"GabiYogaNetwork/Exports/Output{\"Ref\":\"GabiYogaFreeVpcA59DDC13\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"Output{\"Ref\":\"GabiYogaFreeVpcisolatedSubnet1Subnet38080C97\"}":{"id":"Output{\"Ref\":\"GabiYogaFreeVpcisolatedSubnet1Subnet38080C97\"}","path":"GabiYogaNetwork/Exports/Output{\"Ref\":\"GabiYogaFreeVpcisolatedSubnet1Subnet38080C97\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"Output{\"Ref\":\"GabiYogaFreeVpcisolatedSubnet2Subnet5F4D55DA\"}":{"id":"Output{\"Ref\":\"GabiYogaFreeVpcisolatedSubnet2Subnet5F4D55DA\"}","path":"GabiYogaNetwork/Exports/Output{\"Ref\":\"GabiYogaFreeVpcisolatedSubnet2Subnet5F4D55DA\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"Output{\"Ref\":\"GabiYogaFreeVpcpublicSubnet1Subnet46DE1B15\"}":{"id":"Output{\"Ref\":\"GabiYogaFreeVpcpublicSubnet1Subnet46DE1B15\"}","path":"GabiYogaNetwork/Exports/Output{\"Ref\":\"GabiYogaFreeVpcpublicSubnet1Subnet46DE1B15\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"Output{\"Ref\":\"GabiYogaFreeVpcpublicSubnet2SubnetFC1D6654\"}":{"id":"Output{\"Ref\":\"GabiYogaFreeVpcpublicSubnet2SubnetFC1D6654\"}","path":"GabiYogaNetwork/Exports/Output{\"Ref\":\"GabiYogaFreeVpcpublicSubnet2SubnetFC1D6654\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"BootstrapVersion":{"id":"BootstrapVersion","path":"GabiYogaNetwork/BootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnParameter","version":"2.192.0"}},"CheckBootstrapVersion":{"id":"CheckBootstrapVersion","path":"GabiYogaNetwork/CheckBootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnRule","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.Stack","version":"2.192.0"}},"GabiYogaStorage":{"id":"GabiYogaStorage","path":"GabiYogaStorage","children":{"StorageBucket":{"id":"StorageBucket","path":"GabiYogaStorage/StorageBucket","constructInfo":{"fqn":"aws-cdk-lib.aws_s3.BucketBase","version":"2.192.0","metadata":[]}},"OriginAccessControl":{"id":"OriginAccessControl","path":"GabiYogaStorage/OriginAccessControl","attributes":{"aws:cdk:cloudformation:type":"AWS::CloudFront::OriginAccessControl","aws:cdk:cloudformation:props":{"originAccessControlConfig":{"name":"GabiYogaS3Access","originAccessControlOriginType":"s3","signingBehavior":"always","signingProtocol":"sigv4","description":"Access control for Gabi Yoga S3 bucket"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_cloudfront.CfnOriginAccessControl","version":"2.192.0"}},"BucketPolicy":{"id":"BucketPolicy","path":"GabiYogaStorage/BucketPolicy","attributes":{"aws:cdk:cloudformation:type":"AWS::S3::BucketPolicy","aws:cdk:cloudformation:props":{"bucket":"gabi-yoga-uploads","policyDocument":{"Version":"2012-10-17","Statement":[{"Action":["s3:GetObject"],"Effect":"Allow","Principal":{"Service":"cloudfront.amazonaws.com"},"Resource":{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":s3:::gabi-yoga-uploads/*"]]},"Condition":{"StringEquals":{"AWS:SourceArn":"arn:aws:cloudfront::891709159344:distribution/*"}}},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject","s3:ListBucket"],"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Resource":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":s3:::gabi-yoga-uploads/*"]]},{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":s3:::gabi-yoga-uploads"]]}]}]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3.CfnBucketPolicy","version":"2.192.0"}},"LogBucket":{"id":"LogBucket","path":"GabiYogaStorage/LogBucket","children":{"Resource":{"id":"Resource","path":"GabiYogaStorage/LogBucket/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::S3::Bucket","aws:cdk:cloudformation:props":{"lifecycleConfiguration":{"rules":[{"expirationInDays":7,"status":"Enabled"}]},"ownershipControls":{"rules":[{"objectOwnership":"ObjectWriter"}]},"tags":[{"key":"aws-cdk:auto-delete-objects","value":"true"},{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3.CfnBucket","version":"2.192.0"}},"Policy":{"id":"Policy","path":"GabiYogaStorage/LogBucket/Policy","children":{"Resource":{"id":"Resource","path":"GabiYogaStorage/LogBucket/Policy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::S3::BucketPolicy","aws:cdk:cloudformation:props":{"bucket":{"Ref":"LogBucketCC3B17E8"},"policyDocument":{"Statement":[{"Action":["s3:PutBucketPolicy","s3:GetBucket*","s3:List*","s3:DeleteObject*"],"Effect":"Allow","Principal":{"AWS":{"Fn::GetAtt":["CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092","Arn"]}},"Resource":[{"Fn::GetAtt":["LogBucketCC3B17E8","Arn"]},{"Fn::Join":["",[{"Fn::GetAtt":["LogBucketCC3B17E8","Arn"]},"/*"]]}]}],"Version":"2012-10-17"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3.CfnBucketPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3.BucketPolicy","version":"2.192.0","metadata":[]}},"AutoDeleteObjectsCustomResource":{"id":"AutoDeleteObjectsCustomResource","path":"GabiYogaStorage/LogBucket/AutoDeleteObjectsCustomResource","children":{"Default":{"id":"Default","path":"GabiYogaStorage/LogBucket/AutoDeleteObjectsCustomResource/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.CustomResource","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3.Bucket","version":"2.192.0","metadata":[]}},"Custom::S3AutoDeleteObjectsCustomResourceProvider":{"id":"Custom::S3AutoDeleteObjectsCustomResourceProvider","path":"GabiYogaStorage/Custom::S3AutoDeleteObjectsCustomResourceProvider","children":{"Staging":{"id":"Staging","path":"GabiYogaStorage/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging","constructInfo":{"fqn":"aws-cdk-lib.AssetStaging","version":"2.192.0"}},"Role":{"id":"Role","path":"GabiYogaStorage/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}},"Handler":{"id":"Handler","path":"GabiYogaStorage/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.CustomResourceProviderBase","version":"2.192.0"}},"Distribution":{"id":"Distribution","path":"GabiYogaStorage/Distribution","children":{"Origin1":{"id":"Origin1","path":"GabiYogaStorage/Distribution/Origin1","children":{"S3Origin":{"id":"S3Origin","path":"GabiYogaStorage/Distribution/Origin1/S3Origin","children":{"Resource":{"id":"Resource","path":"GabiYogaStorage/Distribution/Origin1/S3Origin/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::CloudFront::CloudFrontOriginAccessIdentity","aws:cdk:cloudformation:props":{"cloudFrontOriginAccessIdentityConfig":{"comment":"Identity for GabiYogaStorageDistributionOrigin1AACB005D"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_cloudfront.OriginAccessIdentity","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"Resource":{"id":"Resource","path":"GabiYogaStorage/Distribution/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::CloudFront::Distribution","aws:cdk:cloudformation:props":{"distributionConfig":{"enabled":true,"origins":[{"domainName":"gabi-yoga-uploads.s3.us-west-2.amazonaws.com","id":"GabiYogaStorageDistributionOrigin1AACB005D","s3OriginConfig":{"originAccessIdentity":{"Fn::Join":["",["origin-access-identity/cloudfront/",{"Ref":"DistributionOrigin1S3Origin5F5C0696"}]]}}}],"defaultCacheBehavior":{"pathPattern":"*","targetOriginId":"GabiYogaStorageDistributionOrigin1AACB005D","allowedMethods":["GET","HEAD"],"cachedMethods":["GET","HEAD"],"cachePolicyId":"658327ea-f89d-4fab-a63d-7e88639e58f6","compress":true,"viewerProtocolPolicy":"redirect-to-https"},"customErrorResponses":[{"errorCachingMinTtl":300,"errorCode":403,"responseCode":404,"responsePagePath":"/404.html"}],"defaultRootObject":"index.html","httpVersion":"http2","ipv6Enabled":true,"logging":{"bucket":{"Fn::GetAtt":["LogBucketCC3B17E8","RegionalDomainName"]},"prefix":"cloudfront-logs/"},"priceClass":"PriceClass_100"},"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_cloudfront.CfnDistribution","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_cloudfront.Distribution","version":"2.192.0","metadata":[]}},"BucketName":{"id":"BucketName","path":"GabiYogaStorage/BucketName","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CloudFrontURL":{"id":"CloudFrontURL","path":"GabiYogaStorage/CloudFrontURL","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CloudFrontDistributionId":{"id":"CloudFrontDistributionId","path":"GabiYogaStorage/CloudFrontDistributionId","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CDKMetadata":{"id":"CDKMetadata","path":"GabiYogaStorage/CDKMetadata","children":{"Default":{"id":"Default","path":"GabiYogaStorage/CDKMetadata/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"Exports":{"id":"Exports","path":"GabiYogaStorage/Exports","children":{"Output{\"Ref\":\"Distribution830FAC52\"}":{"id":"Output{\"Ref\":\"Distribution830FAC52\"}","path":"GabiYogaStorage/Exports/Output{\"Ref\":\"Distribution830FAC52\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"BootstrapVersion":{"id":"BootstrapVersion","path":"GabiYogaStorage/BootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnParameter","version":"2.192.0"}},"CheckBootstrapVersion":{"id":"CheckBootstrapVersion","path":"GabiYogaStorage/CheckBootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnRule","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.Stack","version":"2.192.0"}},"GabiYogaDatabase":{"id":"GabiYogaDatabase","path":"GabiYogaDatabase","children":{"DatabaseSecurityGroup":{"id":"DatabaseSecurityGroup","path":"GabiYogaDatabase/DatabaseSecurityGroup","children":{"Resource":{"id":"Resource","path":"GabiYogaDatabase/DatabaseSecurityGroup/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::SecurityGroup","aws:cdk:cloudformation:props":{"groupDescription":"Allow database connections","securityGroupEgress":[{"cidrIp":"0.0.0.0/0","description":"Allow all outbound traffic by default","ipProtocol":"-1"}],"securityGroupIngress":[{"cidrIp":{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputFnGetAttGabiYogaFreeVpcA59DDC13CidrBlock668DB7C5"},"ipProtocol":"tcp","fromPort":3306,"toPort":3306,"description":"Allow MySQL connections from within the VPC"}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcA59DDC1394F0D6DE"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSecurityGroup","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.SecurityGroup","version":"2.192.0","metadata":[]}},"DatabaseCredentials":{"id":"DatabaseCredentials","path":"GabiYogaDatabase/DatabaseCredentials","children":{"Resource":{"id":"Resource","path":"GabiYogaDatabase/DatabaseCredentials/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::SecretsManager::Secret","aws:cdk:cloudformation:props":{"generateSecretString":{"secretStringTemplate":"{\"username\":\"admin\"}","generateStringKey":"password","excludePunctuation":true,"includeSpace":false,"passwordLength":16},"name":"gabi-yoga-db-credentials","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_secretsmanager.CfnSecret","version":"2.192.0"}},"Attachment":{"id":"Attachment","path":"GabiYogaDatabase/DatabaseCredentials/Attachment","children":{"Resource":{"id":"Resource","path":"GabiYogaDatabase/DatabaseCredentials/Attachment/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::SecretsManager::SecretTargetAttachment","aws:cdk:cloudformation:props":{"secretId":{"Ref":"DatabaseCredentials8547B3E7"},"targetId":{"Ref":"DatabaseB269D8BB"},"targetType":"AWS::RDS::DBInstance"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_secretsmanager.CfnSecretTargetAttachment","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_secretsmanager.SecretTargetAttachment","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_secretsmanager.Secret","version":"2.192.0","metadata":[]}},"Database":{"id":"Database","path":"GabiYogaDatabase/Database","children":{"SubnetGroup":{"id":"SubnetGroup","path":"GabiYogaDatabase/Database/SubnetGroup","children":{"Default":{"id":"Default","path":"GabiYogaDatabase/Database/SubnetGroup/Default","attributes":{"aws:cdk:cloudformation:type":"AWS::RDS::DBSubnetGroup","aws:cdk:cloudformation:props":{"dbSubnetGroupDescription":"Subnet group for Database database","subnetIds":[{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcisolatedSubnet1Subnet38080C97B84B7E08"},{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcisolatedSubnet2Subnet5F4D55DA777E03BA"}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_rds.CfnDBSubnetGroup","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_rds.SubnetGroup","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaDatabase/Database/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::RDS::DBInstance","aws:cdk:cloudformation:props":{"allocatedStorage":"20","allowMajorVersionUpgrade":false,"autoMinorVersionUpgrade":true,"backupRetentionPeriod":1,"copyTagsToSnapshot":true,"dbInstanceClass":"db.t4g.micro","dbName":"yoga","dbSubnetGroupName":{"Ref":"DatabaseSubnetGroup7D60F180"},"deleteAutomatedBackups":true,"deletionProtection":false,"engine":"mysql","engineVersion":"8.0","masterUsername":{"Fn::Join":["",["{{resolve:secretsmanager:",{"Ref":"DatabaseCredentials8547B3E7"},":SecretString:username::}}"]]},"masterUserPassword":{"Fn::Join":["",["{{resolve:secretsmanager:",{"Ref":"DatabaseCredentials8547B3E7"},":SecretString:password::}}"]]},"maxAllocatedStorage":20,"multiAz":false,"publiclyAccessible":false,"storageType":"gp2","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"vpcSecurityGroups":[{"Fn::GetAtt":["DatabaseSecurityGroup7319C0F6","GroupId"]}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_rds.CfnDBInstance","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_rds.DatabaseInstance","version":"2.192.0","metadata":[]}},"SetupMysqlUsersFunction":{"id":"SetupMysqlUsersFunction","path":"GabiYogaDatabase/SetupMysqlUsersFunction","children":{"ServiceRole":{"id":"ServiceRole","path":"GabiYogaDatabase/SetupMysqlUsersFunction/ServiceRole","children":{"ImportServiceRole":{"id":"ImportServiceRole","path":"GabiYogaDatabase/SetupMysqlUsersFunction/ServiceRole/ImportServiceRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaDatabase/SetupMysqlUsersFunction/ServiceRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"}}],"Version":"2012-10-17"},"managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]]}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}},"DefaultPolicy":{"id":"DefaultPolicy","path":"GabiYogaDatabase/SetupMysqlUsersFunction/ServiceRole/DefaultPolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaDatabase/SetupMysqlUsersFunction/ServiceRole/DefaultPolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":["secretsmanager:GetSecretValue","secretsmanager:DescribeSecret"],"Effect":"Allow","Resource":{"Ref":"DatabaseCredentials8547B3E7"}}],"Version":"2012-10-17"},"policyName":"SetupMysqlUsersFunctionServiceRoleDefaultPolicyB1808503","roles":[{"Ref":"SetupMysqlUsersFunctionServiceRole080F9ABB"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaDatabase/SetupMysqlUsersFunction/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Lambda::Function","aws:cdk:cloudformation:props":{"code":{"zipFile":"\nconst AWS = require('aws-sdk');\n\nexports.handler = async (event) => {\n  console.log('Event: ', JSON.stringify(event));\n  \n  const requestType = event.RequestType;\n  if (requestType === 'Delete') {\n    return await sendResponse(event, 'SUCCESS', {});\n  }\n  \n  try {\n    // Get the database credentials from Secrets Manager\n    console.log('Fetching credentials from Secrets Manager');\n    const secretsManager = new AWS.SecretsManager();\n    const secretData = await secretsManager.getSecretValue({\n      SecretId: process.env.SECRET_ARN\n    }).promise();\n    \n    const secretJson = JSON.parse(secretData.SecretString);\n    const username = secretJson.username;\n    const password = secretJson.password;\n    const dbEndpoint = process.env.DB_ENDPOINT;\n    const dbName = process.env.DB_NAME;\n    \n    console.log('Retrieved database endpoint:', dbEndpoint);\n    console.log('Using database name:', dbName);\n    \n    // SIMPLIFIED APPROACH: Instead of trying to connect directly to MySQL,\n    // we'll simply return success here as the EC2 user data script \n    // will handle user creation as needed.\n    console.log('Skipping direct database connection - EC2 will handle user creation');\n    \n    // Log success for CloudWatch\n    console.log('Custom resource execution completed successfully');\n    \n    // Return success immediately\n    return await sendResponse(event, 'SUCCESS', {\n      Message: 'MySQL user will be configured by EC2 user data script in webapp-stack.ts'\n    });\n  } catch (error) {\n    console.error('Error configuring MySQL user:', error);\n    return await sendResponse(event, 'FAILED', {\n      Message: `Error configuring MySQL user: ${error.message}`\n    });\n  }\n};\n\n// Helper function to send CloudFormation response\nasync function sendResponse(event, status, data) {\n  const responseBody = JSON.stringify({\n    Status: status,\n    Reason: `See details in CloudWatch Log Stream: ${process.env.AWS_LAMBDA_LOG_GROUP_NAME}`,\n    PhysicalResourceId: event.LogicalResourceId,\n    StackId: event.StackId,\n    RequestId: event.RequestId,\n    LogicalResourceId: event.LogicalResourceId,\n    Data: data\n  });\n  \n  console.log('Response body:', responseBody);\n  \n  const https = require('https');\n  const url = require('url');\n  \n  return new Promise((resolve, reject) => {\n    const parsedUrl = url.parse(event.ResponseURL);\n    const options = {\n      hostname: parsedUrl.hostname,\n      port: 443,\n      path: parsedUrl.path,\n      method: 'PUT',\n      headers: {\n        'Content-Type': '',\n        'Content-Length': responseBody.length\n      }\n    };\n    \n    const request = https.request(options, (response) => {\n      console.log(`Response status code: ${response.statusCode}`);\n      resolve();\n    });\n    \n    request.on('error', (error) => {\n      console.error('Error sending response:', error);\n      reject(error);\n    });\n    \n    request.write(responseBody);\n    request.end();\n  });\n}\n      "},"environment":{"variables":{"SECRET_ARN":{"Ref":"DatabaseCredentials8547B3E7"},"DB_ENDPOINT":{"Fn::GetAtt":["DatabaseB269D8BB","Endpoint.Address"]},"DB_NAME":"yoga"}},"handler":"index.handler","memorySize":256,"role":{"Fn::GetAtt":["SetupMysqlUsersFunctionServiceRole080F9ABB","Arn"]},"runtime":"nodejs16.x","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"timeout":30}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.CfnFunction","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.Function","version":"2.192.0","metadata":[]}},"SetupMysqlUsersProvider":{"id":"SetupMysqlUsersProvider","path":"GabiYogaDatabase/SetupMysqlUsersProvider","children":{"framework-onEvent":{"id":"framework-onEvent","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent","children":{"ServiceRole":{"id":"ServiceRole","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/ServiceRole","children":{"ImportServiceRole":{"id":"ImportServiceRole","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/ServiceRole/ImportServiceRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/ServiceRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"}}],"Version":"2012-10-17"},"managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]]}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}},"DefaultPolicy":{"id":"DefaultPolicy","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/ServiceRole/DefaultPolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":"lambda:InvokeFunction","Effect":"Allow","Resource":[{"Fn::GetAtt":["SetupMysqlUsersFunction2D5AC7B4","Arn"]},{"Fn::Join":["",[{"Fn::GetAtt":["SetupMysqlUsersFunction2D5AC7B4","Arn"]},":*"]]}]},{"Action":"lambda:GetFunction","Effect":"Allow","Resource":{"Fn::GetAtt":["SetupMysqlUsersFunction2D5AC7B4","Arn"]}}],"Version":"2012-10-17"},"policyName":"SetupMysqlUsersProviderframeworkonEventServiceRoleDefaultPolicy91AB5279","roles":[{"Ref":"SetupMysqlUsersProviderframeworkonEventServiceRole675B63A7"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"Code":{"id":"Code","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/Code","children":{"Stage":{"id":"Stage","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/Code/Stage","constructInfo":{"fqn":"aws-cdk-lib.AssetStaging","version":"2.192.0"}},"AssetBucket":{"id":"AssetBucket","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/Code/AssetBucket","constructInfo":{"fqn":"aws-cdk-lib.aws_s3.BucketBase","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3_assets.Asset","version":"2.192.0"}},"Resource":{"id":"Resource","path":"GabiYogaDatabase/SetupMysqlUsersProvider/framework-onEvent/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Lambda::Function","aws:cdk:cloudformation:props":{"code":{"s3Bucket":"cdk-hnb659fds-assets-891709159344-us-west-2","s3Key":"bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip"},"description":"AWS CDK resource provider framework - onEvent (GabiYogaDatabase/SetupMysqlUsersProvider)","environment":{"variables":{"USER_ON_EVENT_FUNCTION_ARN":{"Fn::GetAtt":["SetupMysqlUsersFunction2D5AC7B4","Arn"]}}},"handler":"framework.onEvent","role":{"Fn::GetAtt":["SetupMysqlUsersProviderframeworkonEventServiceRole675B63A7","Arn"]},"runtime":"nodejs20.x","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"timeout":900}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.CfnFunction","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.Function","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.custom_resources.Provider","version":"2.192.0"}},"SetupMysqlUsers":{"id":"SetupMysqlUsers","path":"GabiYogaDatabase/SetupMysqlUsers","children":{"Default":{"id":"Default","path":"GabiYogaDatabase/SetupMysqlUsers/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.CustomResource","version":"2.192.0","metadata":[]}},"DatabaseEndpoint":{"id":"DatabaseEndpoint","path":"GabiYogaDatabase/DatabaseEndpoint","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"DatabaseSecretArn":{"id":"DatabaseSecretArn","path":"GabiYogaDatabase/DatabaseSecretArn","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CDKMetadata":{"id":"CDKMetadata","path":"GabiYogaDatabase/CDKMetadata","children":{"Default":{"id":"Default","path":"GabiYogaDatabase/CDKMetadata/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"Exports":{"id":"Exports","path":"GabiYogaDatabase/Exports","children":{"Output{\"Ref\":\"DatabaseCredentials8547B3E7\"}":{"id":"Output{\"Ref\":\"DatabaseCredentials8547B3E7\"}","path":"GabiYogaDatabase/Exports/Output{\"Ref\":\"DatabaseCredentials8547B3E7\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"Output{\"Fn::GetAtt\":[\"DatabaseB269D8BB\",\"Endpoint.Address\"]}":{"id":"Output{\"Fn::GetAtt\":[\"DatabaseB269D8BB\",\"Endpoint.Address\"]}","path":"GabiYogaDatabase/Exports/Output{\"Fn::GetAtt\":[\"DatabaseB269D8BB\",\"Endpoint.Address\"]}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"BootstrapVersion":{"id":"BootstrapVersion","path":"GabiYogaDatabase/BootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnParameter","version":"2.192.0"}},"CheckBootstrapVersion":{"id":"CheckBootstrapVersion","path":"GabiYogaDatabase/CheckBootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnRule","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.Stack","version":"2.192.0"}},"GabiYogaWebApp":{"id":"GabiYogaWebApp","path":"GabiYogaWebApp","children":{"WebSecurityGroup":{"id":"WebSecurityGroup","path":"GabiYogaWebApp/WebSecurityGroup","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/WebSecurityGroup/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::SecurityGroup","aws:cdk:cloudformation:props":{"groupDescription":"Security group for web servers","securityGroupEgress":[{"cidrIp":"0.0.0.0/0","description":"Allow all outbound traffic by default","ipProtocol":"-1"}],"securityGroupIngress":[{"cidrIp":"0.0.0.0/0","ipProtocol":"tcp","fromPort":80,"toPort":80,"description":"Allow HTTP"},{"cidrIp":"0.0.0.0/0","ipProtocol":"tcp","fromPort":443,"toPort":443,"description":"Allow HTTPS"},{"cidrIp":"0.0.0.0/0","ipProtocol":"tcp","fromPort":22,"toPort":22,"description":"Allow SSH"}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"vpcId":{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcA59DDC1394F0D6DE"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSecurityGroup","version":"2.192.0"}},"from GabiYogaWebAppWebSecurityGroupB8A6BA72:5001":{"id":"from GabiYogaWebAppWebSecurityGroupB8A6BA72:5001","path":"GabiYogaWebApp/WebSecurityGroup/from GabiYogaWebAppWebSecurityGroupB8A6BA72:5001","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::SecurityGroupIngress","aws:cdk:cloudformation:props":{"description":"Load balancer to target","fromPort":5001,"groupId":{"Fn::GetAtt":["WebSecurityGroup73AF7387","GroupId"]},"ipProtocol":"tcp","sourceSecurityGroupId":{"Fn::GetAtt":["WebSecurityGroup73AF7387","GroupId"]},"toPort":5001}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.SecurityGroup","version":"2.192.0","metadata":[]}},"WebServerRole":{"id":"WebServerRole","path":"GabiYogaWebApp/WebServerRole","children":{"ImportWebServerRole":{"id":"ImportWebServerRole","path":"GabiYogaWebApp/WebServerRole/ImportWebServerRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaWebApp/WebServerRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"}}],"Version":"2012-10-17"},"managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/AmazonSSMManagedInstanceCore"]]},{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/AmazonS3ReadOnlyAccess"]]},{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/CloudWatchAgentServerPolicy"]]},"arn:aws:iam::aws:policy/AmazonSESFullAccess","arn:aws:iam::aws:policy/AmazonWorkMailFullAccess"],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}},"DefaultPolicy":{"id":"DefaultPolicy","path":"GabiYogaWebApp/WebServerRole/DefaultPolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/WebServerRole/DefaultPolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":["s3:GetObject*","s3:GetBucket*","s3:List*","s3:DeleteObject*","s3:PutObject","s3:PutObjectLegalHold","s3:PutObjectRetention","s3:PutObjectTagging","s3:PutObjectVersionTagging","s3:Abort*"],"Effect":"Allow","Resource":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":s3:::gabi-yoga-uploads"]]},{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":s3:::gabi-yoga-uploads/*"]]}]},{"Action":["secretsmanager:GetSecretValue","secretsmanager:DescribeSecret"],"Effect":"Allow","Resource":{"Fn::ImportValue":"GabiYogaDatabase:ExportsOutputRefDatabaseCredentials8547B3E729671DA7"}},{"Action":["secretsmanager:GetSecretValue","secretsmanager:DescribeSecret"],"Effect":"Allow","Resource":{"Fn::ImportValue":"GabiYogaSmtpSecrets:ExportsOutputRefWorkMailSmtpCredentials04C6BE9682036239"}}],"Version":"2012-10-17"},"policyName":"WebServerRoleDefaultPolicy9AFE19CE","roles":[{"Ref":"WebServerRole42ABA571"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"LoadBalancer":{"id":"LoadBalancer","path":"GabiYogaWebApp/LoadBalancer","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/LoadBalancer/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::ElasticLoadBalancingV2::LoadBalancer","aws:cdk:cloudformation:props":{"loadBalancerAttributes":[{"key":"deletion_protection.enabled","value":"false"}],"scheme":"internet-facing","securityGroups":[{"Fn::GetAtt":["WebSecurityGroup73AF7387","GroupId"]}],"subnets":[{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcpublicSubnet1Subnet46DE1B152A307906"},{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcpublicSubnet2SubnetFC1D66542206F900"}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"type":"application"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.CfnLoadBalancer","version":"2.192.0"}},"HttpListener":{"id":"HttpListener","path":"GabiYogaWebApp/LoadBalancer/HttpListener","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/LoadBalancer/HttpListener/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::ElasticLoadBalancingV2::Listener","aws:cdk:cloudformation:props":{"defaultActions":[{"type":"redirect","redirectConfig":{"statusCode":"HTTP_301","port":"443","protocol":"HTTPS"}}],"loadBalancerArn":{"Ref":"LoadBalancerBE9EEC3A"},"port":80,"protocol":"HTTP"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener","version":"2.192.0"}},"WebTargetGroup":{"id":"WebTargetGroup","path":"GabiYogaWebApp/LoadBalancer/HttpListener/WebTargetGroup","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/LoadBalancer/HttpListener/WebTargetGroup/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::ElasticLoadBalancingV2::TargetGroup","aws:cdk:cloudformation:props":{"healthCheckIntervalSeconds":30,"healthCheckPath":"/api/health","healthCheckTimeoutSeconds":5,"healthyThresholdCount":2,"port":5001,"protocol":"HTTP","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"targetGroupAttributes":[{"key":"stickiness.enabled","value":"false"}],"targetType":"instance","unhealthyThresholdCount":5,"vpcId":{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcA59DDC1394F0D6DE"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.CfnTargetGroup","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationTargetGroup","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener","version":"2.192.0","metadata":[]}},"HttpsListener":{"id":"HttpsListener","path":"GabiYogaWebApp/LoadBalancer/HttpsListener","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/LoadBalancer/HttpsListener/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::ElasticLoadBalancingV2::Listener","aws:cdk:cloudformation:props":{"certificates":[{"certificateArn":{"Fn::ImportValue":"GabiYogaDns:ExportsOutputRefCertificate4E7ABB08F7C8AF50"}}],"defaultActions":[{"type":"forward","targetGroupArn":{"Ref":"LoadBalancerHttpsListenerHttpsWebTargetGroup7A821C28"}}],"loadBalancerArn":{"Ref":"LoadBalancerBE9EEC3A"},"port":443,"protocol":"HTTPS","sslPolicy":"ELBSecurityPolicy-2016-08"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener","version":"2.192.0"}},"HttpsWebTargetGroup":{"id":"HttpsWebTargetGroup","path":"GabiYogaWebApp/LoadBalancer/HttpsListener/HttpsWebTargetGroup","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/LoadBalancer/HttpsListener/HttpsWebTargetGroup/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::ElasticLoadBalancingV2::TargetGroup","aws:cdk:cloudformation:props":{"healthCheckIntervalSeconds":30,"healthCheckPath":"/api/health","healthCheckTimeoutSeconds":5,"healthyThresholdCount":2,"port":5001,"protocol":"HTTP","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"targetGroupAttributes":[{"key":"stickiness.enabled","value":"false"}],"targetType":"instance","unhealthyThresholdCount":5,"vpcId":{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcA59DDC1394F0D6DE"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.CfnTargetGroup","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationTargetGroup","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer","version":"2.192.0","metadata":[]}},"WebServerLaunchTemplate":{"id":"WebServerLaunchTemplate","path":"GabiYogaWebApp/WebServerLaunchTemplate","children":{"Profile":{"id":"Profile","path":"GabiYogaWebApp/WebServerLaunchTemplate/Profile","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::InstanceProfile","aws:cdk:cloudformation:props":{"roles":[{"Ref":"WebServerRole42ABA571"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnInstanceProfile","version":"2.192.0"}},"Resource":{"id":"Resource","path":"GabiYogaWebApp/WebServerLaunchTemplate/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::EC2::LaunchTemplate","aws:cdk:cloudformation:props":{"launchTemplateData":{"iamInstanceProfile":{"arn":{"Fn::GetAtt":["WebServerLaunchTemplateProfile90C47AD5","Arn"]}},"imageId":{"Ref":"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"},"instanceType":"t2.micro","securityGroupIds":[{"Fn::GetAtt":["WebSecurityGroup73AF7387","GroupId"]}],"tagSpecifications":[{"resourceType":"instance","tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaWebApp/WebServerLaunchTemplate"},{"key":"Project","value":"GabiYoga"}]},{"resourceType":"volume","tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaWebApp/WebServerLaunchTemplate"},{"key":"Project","value":"GabiYoga"}]}],"userData":{"Fn::Base64":{"Fn::Join":["",["#!/bin/bash\necho \"Starting user data script execution at $(date)\"\nset -x\nyum update -y\nyum install -y mysql git mariadb-client\necho \"Installing NVM...\"\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"\necho \"Sourcing bash profiles to enable NVM\"\nsource ~/.bashrc || source ~/.bash_profile || true\nnvm install 16\nnvm use 16\nnvm alias default 16\necho \"Creating system-wide Node.js symlinks\"\nNODE_PATH=\"$HOME/.nvm/versions/node/v16.20.2/bin/node\"\nNPM_PATH=\"$HOME/.nvm/versions/node/v16.20.2/bin/npm\"\n[ -f \"$NODE_PATH\" ] || NODE_PATH=\"$(find $HOME/.nvm/versions/node -name node -type f | head -n 1)\"\n[ -f \"$NPM_PATH\" ] || NPM_PATH=\"$(find $HOME/.nvm/versions/node -name npm -type f | head -n 1)\"\necho \"Node path: $NODE_PATH\"\necho \"NPM path: $NPM_PATH\"\nif [ -L \"/usr/bin/node\" ]; then rm -f /usr/bin/node; fi\nif [ -L \"/usr/bin/npm\" ]; then rm -f /usr/bin/npm; fi\nif [ -L \"/usr/local/bin/node\" ]; then rm -f /usr/local/bin/node; fi\nif [ -L \"/usr/local/bin/npm\" ]; then rm -f /usr/local/bin/npm; fi\nln -sf \"$NODE_PATH\" /usr/bin/node\nln -sf \"$NPM_PATH\" /usr/bin/npm\nln -sf \"$NODE_PATH\" /usr/local/bin/node\nln -sf \"$NPM_PATH\" /usr/local/bin/npm\nls -la /usr/bin/node || echo \"Failed to create symlink\"\necho \"export NVM_DIR=\\\"\\$HOME/.nvm\\\"\" >> /etc/profile.d/nvm.sh\necho \"[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"\" >> /etc/profile.d/nvm.sh\necho \"[ -s \\\"\\$NVM_DIR/bash_completion\\\" ] && \\\\. \\\"\\$NVM_DIR/bash_completion\\\"\" >> /etc/profile.d/nvm.sh\nchmod +x /etc/profile.d/nvm.sh\nmkdir -p /var/www/gabiyoga\necho \"Cloning application repository...\"\ngit clone https://github.com/jlandron/GabiYogaWebsite.git /var/www/gabiyoga-temp\nif [ $? -eq 0 ]; then\n  cp -R /var/www/gabiyoga-temp/* /var/www/gabiyoga/\n  cp -R /var/www/gabiyoga-temp/.* /var/www/gabiyoga/ 2>/dev/null || echo \"No hidden files to copy\"\n  rm -rf /var/www/gabiyoga-temp\n  echo \"✅ Repository cloned successfully\"\nelse\n  echo \"⚠️ Repository clone failed, creating minimal application\"\n  # Create server.js file\n  cat > /var/www/gabiyoga/server.js << 'EOF'\n// Minimal Express server for Gabi Yoga\nconst express = require('express');\nconst app = express();\nconst port = process.env.PORT || 5001;\n\n// Middleware\napp.use(express.json());\napp.use(express.static('public'));\n\n// Health check endpoint\napp.get('/api/health', (req, res) => {\n  res.json({ status: 'ok', message: 'Server is running' });\n});\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\nEOF\n\n  # Create package.json\n  cat > /var/www/gabiyoga/package.json << 'EOF'\n{\n  \"name\": \"gabi-yoga\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Gabi Yoga Web Application\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.17.1\"\n  }\n}\nEOF\n\n  # Create public directory and index.html\n  mkdir -p /var/www/gabiyoga/public\n  echo \"<!DOCTYPE html><html><body><h1>Gabi Yoga</h1><p>Server is running</p></body></html>\" > /var/www/gabiyoga/public/index.html\nfi\nyum install -y jq\necho \"Fetching database credentials from Secrets Manager\"\nexport AWS_DEFAULT_REGION=us-west-2\necho \"Using AWS region: us-west-2\"\nSECRET_JSON=$(aws secretsmanager get-secret-value --secret-id gabi-yoga-db-credentials --region us-west-2 --query SecretString --output text)\nDB_USERNAME=$(echo $SECRET_JSON | jq -r '.username')\nDB_PASSWORD=$(echo $SECRET_JSON | jq -r '.password')\necho \"Creating .env file with secure credentials\"\ncat > /var/www/gabiyoga/.env << EOF\nNODE_ENV=production\nPORT=5001\nJWT_SECRET=$(openssl rand -hex 64)\nJWT_EXPIRY=24h\nDB_TYPE=mysql\nDB_HOST=",{"Fn::ImportValue":"GabiYogaDatabase:ExportsOutputFnGetAttDatabaseB269D8BBEndpointAddressA4DBD059"},"\nDB_PORT=3306\nDB_NAME=yoga\nDB_USER=${DB_USERNAME}\nDB_PASSWORD=${DB_PASSWORD}\nAWS_REGION=us-west-2\nS3_BUCKET_NAME=gabi-yoga-uploads\nCLOUDFRONT_DISTRIBUTION_ID=",{"Fn::ImportValue":"GabiYogaStorage:ExportsOutputRefDistribution830FAC524DF81588"},"\nSTRIPE_PUBLISHABLE_KEY=pk_test_51RIECgFvIUQZU80GkNvPQBmwpbKhf0LiFCh4Rv5EPxArapsnz6f3C4CWenkiPrZshZCJW3ghjfvveCpdou1bAJkC00b1TlmLo9\nSTRIPE_SECRET_KEY=sk_test_your_secret_key\nSTRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret\n# Email configuration for password reset\nEMAIL_FROM=noreply@gabi.yoga\nBASE_URL=https://gabi.yoga\nEOF\necho \"Creating MySQL user with wildcard host...\"\nmysql -h $DB_HOST -u $DB_USERNAME -p$DB_PASSWORD << EOF\nCREATE USER IF NOT EXISTS '$DB_USERNAME'@'%' IDENTIFIED BY '$DB_PASSWORD';\nGRANT ALL PRIVILEGES ON yoga.* TO '$DB_USERNAME'@'%';\nFLUSH PRIVILEGES;\nEOF\nmkdir -p /var/www/gabiyoga/data\ntouch /var/www/gabiyoga/data/yoga.sqlite\nchmod 644 /var/www/gabiyoga/.env\ncd /var/www/gabiyoga\nnpm install --production\ncat > /etc/systemd/system/gabiyoga.service << EOF\n[Unit]\nDescription=Gabi Yoga Web Application\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nWorkingDirectory=/var/www/gabiyoga\nExecStart=$NODE_PATH /var/www/gabiyoga/server.js\nRestart=on-failure\nRestartSec=10\nStandardOutput=journal\nStandardError=journal\nSyslogIdentifier=gabiyoga\nEnvironment=NODE_ENV=production\nEnvironmentFile=/var/www/gabiyoga/.env\n\n[Install]\nWantedBy=multi-user.target\nEOF\necho \"Created systemd service with Node.js path: $NODE_PATH\"\nsystemctl daemon-reload\nsystemctl enable gabiyoga\nsystemctl start gabiyoga\necho \"Gabi Yoga web application startup completed\"\necho \"User data script completed at $(date)\""]]}}},"tagSpecifications":[{"resourceType":"launch-template","tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaWebApp/WebServerLaunchTemplate"},{"key":"Project","value":"GabiYoga"}]}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.CfnLaunchTemplate","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ec2.LaunchTemplate","version":"2.192.0","metadata":[]}},"SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-kernel-5.10-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter":{"id":"SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-kernel-5.10-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter","path":"GabiYogaWebApp/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-kernel-5.10-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter","constructInfo":{"fqn":"aws-cdk-lib.CfnParameter","version":"2.192.0"}},"SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-kernel-5.10-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118":{"id":"SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-kernel-5.10-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118","path":"GabiYogaWebApp/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-kernel-5.10-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"WebServerASG":{"id":"WebServerASG","path":"GabiYogaWebApp/WebServerASG","children":{"ASG":{"id":"ASG","path":"GabiYogaWebApp/WebServerASG/ASG","attributes":{"aws:cdk:cloudformation:type":"AWS::AutoScaling::AutoScalingGroup","aws:cdk:cloudformation:props":{"desiredCapacity":"1","launchTemplate":{"launchTemplateId":{"Ref":"WebServerLaunchTemplateF0B86FE6"},"version":{"Fn::GetAtt":["WebServerLaunchTemplateF0B86FE6","LatestVersionNumber"]}},"maxSize":"1","minSize":"1","tags":[{"key":"Environment","value":"Production","propagateAtLaunch":true},{"key":"Project","value":"GabiYoga","propagateAtLaunch":true}],"targetGroupArns":[{"Ref":"LoadBalancerHttpListenerWebTargetGroup156743A2"},{"Ref":"LoadBalancerHttpsListenerHttpsWebTargetGroup7A821C28"}],"vpcZoneIdentifier":[{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcpublicSubnet1Subnet46DE1B152A307906"},{"Fn::ImportValue":"GabiYogaNetwork:ExportsOutputRefGabiYogaFreeVpcpublicSubnet2SubnetFC1D66542206F900"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_autoscaling.CfnAutoScalingGroup","version":"2.192.0"}},"ScalingPolicyCpuScaling":{"id":"ScalingPolicyCpuScaling","path":"GabiYogaWebApp/WebServerASG/ScalingPolicyCpuScaling","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/WebServerASG/ScalingPolicyCpuScaling/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::AutoScaling::ScalingPolicy","aws:cdk:cloudformation:props":{"autoScalingGroupName":{"Ref":"WebServerASG5A722E5A"},"cooldown":"300","policyType":"TargetTrackingScaling","targetTrackingConfiguration":{"predefinedMetricSpecification":{"predefinedMetricType":"ASGAverageCPUUtilization"},"targetValue":70}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_autoscaling.CfnScalingPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_autoscaling.TargetTrackingScalingPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_autoscaling.AutoScalingGroup","version":"2.192.0","metadata":[]}},"WebAppLogs":{"id":"WebAppLogs","path":"GabiYogaWebApp/WebAppLogs","children":{"Resource":{"id":"Resource","path":"GabiYogaWebApp/WebAppLogs/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Logs::LogGroup","aws:cdk:cloudformation:props":{"retentionInDays":14,"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_logs.CfnLogGroup","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_logs.LogGroup","version":"2.192.0","metadata":[]}},"LoadBalancerDNS":{"id":"LoadBalancerDNS","path":"GabiYogaWebApp/LoadBalancerDNS","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"WebServerSecurityGroup":{"id":"WebServerSecurityGroup","path":"GabiYogaWebApp/WebServerSecurityGroup","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CDKMetadata":{"id":"CDKMetadata","path":"GabiYogaWebApp/CDKMetadata","children":{"Default":{"id":"Default","path":"GabiYogaWebApp/CDKMetadata/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"BootstrapVersion":{"id":"BootstrapVersion","path":"GabiYogaWebApp/BootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnParameter","version":"2.192.0"}},"CheckBootstrapVersion":{"id":"CheckBootstrapVersion","path":"GabiYogaWebApp/CheckBootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnRule","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.Stack","version":"2.192.0"}},"GabiYogaDns":{"id":"GabiYogaDns","path":"GabiYogaDns","children":{"ImportedHostedZone":{"id":"ImportedHostedZone","path":"GabiYogaDns/ImportedHostedZone","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Certificate":{"id":"Certificate","path":"GabiYogaDns/Certificate","children":{"Resource":{"id":"Resource","path":"GabiYogaDns/Certificate/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::CertificateManager::Certificate","aws:cdk:cloudformation:props":{"domainName":"gabi.yoga","domainValidationOptions":[{"domainName":"gabi.yoga","hostedZoneId":"Z0858162FM97J2FO2QJU"},{"domainName":"www.gabi.yoga","hostedZoneId":"Z0858162FM97J2FO2QJU"}],"subjectAlternativeNames":["www.gabi.yoga"],"tags":[{"key":"Environment","value":"Production"},{"key":"Name","value":"GabiYogaDns/Certificate"},{"key":"Project","value":"GabiYoga"}],"validationMethod":"DNS"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_certificatemanager.CfnCertificate","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_certificatemanager.Certificate","version":"2.192.0","metadata":[]}},"HostedZoneId":{"id":"HostedZoneId","path":"GabiYogaDns/HostedZoneId","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CertificateArn":{"id":"CertificateArn","path":"GabiYogaDns/CertificateArn","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"DnsConfigInstructions":{"id":"DnsConfigInstructions","path":"GabiYogaDns/DnsConfigInstructions","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CDKMetadata":{"id":"CDKMetadata","path":"GabiYogaDns/CDKMetadata","children":{"Default":{"id":"Default","path":"GabiYogaDns/CDKMetadata/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"Exports":{"id":"Exports","path":"GabiYogaDns/Exports","children":{"Output{\"Ref\":\"Certificate4E7ABB08\"}":{"id":"Output{\"Ref\":\"Certificate4E7ABB08\"}","path":"GabiYogaDns/Exports/Output{\"Ref\":\"Certificate4E7ABB08\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"BootstrapVersion":{"id":"BootstrapVersion","path":"GabiYogaDns/BootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnParameter","version":"2.192.0"}},"CheckBootstrapVersion":{"id":"CheckBootstrapVersion","path":"GabiYogaDns/CheckBootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnRule","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.Stack","version":"2.192.0"}},"GabiYogaEmail":{"id":"GabiYogaEmail","path":"GabiYogaEmail","children":{"ImportedHostedZone":{"id":"ImportedHostedZone","path":"GabiYogaEmail/ImportedHostedZone","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"DomainIdentity":{"id":"DomainIdentity","path":"GabiYogaEmail/DomainIdentity","children":{"Resource":{"id":"Resource","path":"GabiYogaEmail/DomainIdentity/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::SES::EmailIdentity","aws:cdk:cloudformation:props":{"dkimAttributes":{"signingEnabled":true},"emailIdentity":"gabi.yoga","mailFromAttributes":{"mailFromDomain":"mail.gabi.yoga"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ses.CfnEmailIdentity","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_ses.EmailIdentity","version":"2.192.0","metadata":[]}},"EmailServicesRole":{"id":"EmailServicesRole","path":"GabiYogaEmail/EmailServicesRole","children":{"ImportEmailServicesRole":{"id":"ImportEmailServicesRole","path":"GabiYogaEmail/EmailServicesRole/ImportEmailServicesRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaEmail/EmailServicesRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"}}],"Version":"2012-10-17"},"description":"IAM role for accessing email services","managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/AmazonSESFullAccess"]]},{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/AmazonWorkMailFullAccess"]]}],"policies":[{"policyName":"EmailPolicy","policyDocument":{"Statement":[{"Action":["ses:SendEmail","ses:SendRawEmail","ses:SendTemplatedEmail","workmail:*"],"Effect":"Allow","Resource":"*","Sid":"AllowEmailServices"}],"Version":"2012-10-17"}}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"WorkMailOrgFunction":{"id":"WorkMailOrgFunction","path":"GabiYogaEmail/WorkMailOrgFunction","children":{"ServiceRole":{"id":"ServiceRole","path":"GabiYogaEmail/WorkMailOrgFunction/ServiceRole","children":{"ImportServiceRole":{"id":"ImportServiceRole","path":"GabiYogaEmail/WorkMailOrgFunction/ServiceRole/ImportServiceRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaEmail/WorkMailOrgFunction/ServiceRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"}}],"Version":"2012-10-17"},"managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]]},{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/AmazonSESFullAccess"]]},{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/AmazonWorkMailFullAccess"]]}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}},"DefaultPolicy":{"id":"DefaultPolicy","path":"GabiYogaEmail/WorkMailOrgFunction/ServiceRole/DefaultPolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaEmail/WorkMailOrgFunction/ServiceRole/DefaultPolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":["ds:*","ses:*","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeAvailabilityZones","route53:*"],"Effect":"Allow","Resource":"*"}],"Version":"2012-10-17"},"policyName":"WorkMailOrgFunctionServiceRoleDefaultPolicyE06D1392","roles":[{"Ref":"WorkMailOrgFunctionServiceRole684D894F"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaEmail/WorkMailOrgFunction/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Lambda::Function","aws:cdk:cloudformation:props":{"code":{"zipFile":"\n        const AWS = require('aws-sdk');\n        const workmail = new AWS.WorkMail({ region: process.env.AWS_REGION });\n        \n        exports.handler = async (event) => {\n          console.log('Event:', JSON.stringify(event, null, 2));\n          \n          if (event.RequestType === 'Create') {\n            try {\n              // Create WorkMail organization - don't set DirectoryId\n              const createOrgResult = await workmail.createOrganization({\n                Alias: event.ResourceProperties.OrganizationName\n              }).promise();\n              \n              // Now register the domain separately\n              try {\n                await workmail.registerDomain({\n                  OrganizationId: createOrgResult.OrganizationId,\n                  DomainName: event.ResourceProperties.DomainName\n                }).promise();\n                console.log('Domain registered for organization');\n              } catch (domainError) {\n                console.error('Error registering domain:', domainError);\n                // Continue as domain might be added later manually\n              }\n              \n              console.log('Organization created with ID:', createOrgResult.OrganizationId);\n              \n              return {\n                PhysicalResourceId: createOrgResult.OrganizationId,\n                Data: {\n                  OrganizationId: createOrgResult.OrganizationId\n                }\n              };\n            } catch (error) {\n              console.error('Error creating WorkMail organization:', error);\n              throw error;\n            }\n          } else if (event.RequestType === 'Delete') {\n            try {\n              // Only attempt to delete if it's a valid ID pattern\n              if (event.PhysicalResourceId && event.PhysicalResourceId.match(/^m-[0-9a-f]{32}$/)) {\n                await workmail.deleteOrganization({\n                  OrganizationId: event.PhysicalResourceId,\n                  DeleteDirectory: false\n                }).promise();\n                console.log('Organization deleted');\n              } else {\n                console.log('Not attempting to delete invalid organization ID:', event.PhysicalResourceId);\n              }\n              \n              return {\n                PhysicalResourceId: event.PhysicalResourceId\n              };\n            } catch (error) {\n              console.error('Error deleting WorkMail organization:', error);\n              // Don't throw on delete to allow stack cleanup\n              return {\n                PhysicalResourceId: event.PhysicalResourceId\n              };\n            }\n          } else { // Update\n            return {\n              PhysicalResourceId: event.PhysicalResourceId,\n              Data: {\n                OrganizationId: event.PhysicalResourceId\n              }\n            };\n          }\n        };\n      "},"handler":"index.handler","role":{"Fn::GetAtt":["WorkMailOrgFunctionServiceRole684D894F","Arn"]},"runtime":"nodejs16.x","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"timeout":300}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.CfnFunction","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.Function","version":"2.192.0","metadata":[]}},"WorkMailOrgProvider":{"id":"WorkMailOrgProvider","path":"GabiYogaEmail/WorkMailOrgProvider","children":{"framework-onEvent":{"id":"framework-onEvent","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent","children":{"ServiceRole":{"id":"ServiceRole","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/ServiceRole","children":{"ImportServiceRole":{"id":"ImportServiceRole","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/ServiceRole/ImportServiceRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/ServiceRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"}}],"Version":"2012-10-17"},"managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]]}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}},"DefaultPolicy":{"id":"DefaultPolicy","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/ServiceRole/DefaultPolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":"lambda:InvokeFunction","Effect":"Allow","Resource":[{"Fn::GetAtt":["WorkMailOrgFunctionCA7380EE","Arn"]},{"Fn::Join":["",[{"Fn::GetAtt":["WorkMailOrgFunctionCA7380EE","Arn"]},":*"]]}]},{"Action":"lambda:GetFunction","Effect":"Allow","Resource":{"Fn::GetAtt":["WorkMailOrgFunctionCA7380EE","Arn"]}}],"Version":"2012-10-17"},"policyName":"WorkMailOrgProviderframeworkonEventServiceRoleDefaultPolicy5F5BC5FD","roles":[{"Ref":"WorkMailOrgProviderframeworkonEventServiceRole516A7148"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"Code":{"id":"Code","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/Code","children":{"Stage":{"id":"Stage","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/Code/Stage","constructInfo":{"fqn":"aws-cdk-lib.AssetStaging","version":"2.192.0"}},"AssetBucket":{"id":"AssetBucket","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/Code/AssetBucket","constructInfo":{"fqn":"aws-cdk-lib.aws_s3.BucketBase","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3_assets.Asset","version":"2.192.0"}},"Resource":{"id":"Resource","path":"GabiYogaEmail/WorkMailOrgProvider/framework-onEvent/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Lambda::Function","aws:cdk:cloudformation:props":{"code":{"s3Bucket":"cdk-hnb659fds-assets-891709159344-us-west-2","s3Key":"bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip"},"description":"AWS CDK resource provider framework - onEvent (GabiYogaEmail/WorkMailOrgProvider)","environment":{"variables":{"USER_ON_EVENT_FUNCTION_ARN":{"Fn::GetAtt":["WorkMailOrgFunctionCA7380EE","Arn"]}}},"functionName":"GabiYogaEmail-WorkMailOrgProviderFn","handler":"framework.onEvent","role":{"Fn::GetAtt":["WorkMailOrgProviderframeworkonEventServiceRole516A7148","Arn"]},"runtime":"nodejs20.x","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"timeout":900}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.CfnFunction","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.Function","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.custom_resources.Provider","version":"2.192.0"}},"WorkMailOrganization":{"id":"WorkMailOrganization","path":"GabiYogaEmail/WorkMailOrganization","children":{"Default":{"id":"Default","path":"GabiYogaEmail/WorkMailOrganization/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.CustomResource","version":"2.192.0","metadata":[]}},"AutodiscoverCnameRecord":{"id":"AutodiscoverCnameRecord","path":"GabiYogaEmail/AutodiscoverCnameRecord","children":{"Resource":{"id":"Resource","path":"GabiYogaEmail/AutodiscoverCnameRecord/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Route53::RecordSet","aws:cdk:cloudformation:props":{"hostedZoneId":"Z0858162FM97J2FO2QJU","name":"autodiscover.gabi.yoga.","resourceRecords":["autodiscover.mail.us-west-2.awsapps.com"],"ttl":"1800","type":"CNAME"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_route53.CfnRecordSet","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_route53.CnameRecord","version":"2.192.0","metadata":[]}},"MailFromMxRecord":{"id":"MailFromMxRecord","path":"GabiYogaEmail/MailFromMxRecord","children":{"Resource":{"id":"Resource","path":"GabiYogaEmail/MailFromMxRecord/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Route53::RecordSet","aws:cdk:cloudformation:props":{"hostedZoneId":"Z0858162FM97J2FO2QJU","name":"mail.gabi.yoga.","resourceRecords":["10 feedback-smtp.us-west-2.amazonses.com"],"ttl":"1800","type":"MX"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_route53.CfnRecordSet","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_route53.MxRecord","version":"2.192.0","metadata":[]}},"MailFromSpfRecord":{"id":"MailFromSpfRecord","path":"GabiYogaEmail/MailFromSpfRecord","children":{"Resource":{"id":"Resource","path":"GabiYogaEmail/MailFromSpfRecord/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Route53::RecordSet","aws:cdk:cloudformation:props":{"hostedZoneId":"Z0858162FM97J2FO2QJU","name":"mail.gabi.yoga.","resourceRecords":["\"v=spf1 include:amazonses.com ~all\""],"ttl":"1800","type":"TXT"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_route53.CfnRecordSet","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_route53.TxtRecord","version":"2.192.0","metadata":[]}},"WorkMailMxRecord":{"id":"WorkMailMxRecord","path":"GabiYogaEmail/WorkMailMxRecord","children":{"Resource":{"id":"Resource","path":"GabiYogaEmail/WorkMailMxRecord/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Route53::RecordSet","aws:cdk:cloudformation:props":{"hostedZoneId":"Z0858162FM97J2FO2QJU","name":"gabi.yoga.","resourceRecords":["10 inbound-smtp.us-west-2.amazonaws.com"],"ttl":"1800","type":"MX"}},"constructInfo":{"fqn":"aws-cdk-lib.aws_route53.CfnRecordSet","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_route53.MxRecord","version":"2.192.0","metadata":[]}},"WorkMailOrganizationID":{"id":"WorkMailOrganizationID","path":"GabiYogaEmail/WorkMailOrganizationID","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"WorkMailConsoleURL":{"id":"WorkMailConsoleURL","path":"GabiYogaEmail/WorkMailConsoleURL","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"WorkMailSetupInstructions":{"id":"WorkMailSetupInstructions","path":"GabiYogaEmail/WorkMailSetupInstructions","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"SesIdentityArn":{"id":"SesIdentityArn","path":"GabiYogaEmail/SesIdentityArn","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"EmailServicesRoleArn":{"id":"EmailServicesRoleArn","path":"GabiYogaEmail/EmailServicesRoleArn","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CDKMetadata":{"id":"CDKMetadata","path":"GabiYogaEmail/CDKMetadata","children":{"Default":{"id":"Default","path":"GabiYogaEmail/CDKMetadata/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"BootstrapVersion":{"id":"BootstrapVersion","path":"GabiYogaEmail/BootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnParameter","version":"2.192.0"}},"CheckBootstrapVersion":{"id":"CheckBootstrapVersion","path":"GabiYogaEmail/CheckBootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnRule","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.Stack","version":"2.192.0"}},"GabiYogaSmtpSecrets":{"id":"GabiYogaSmtpSecrets","path":"GabiYogaSmtpSecrets","children":{"WorkMailSmtpCredentials":{"id":"WorkMailSmtpCredentials","path":"GabiYogaSmtpSecrets/WorkMailSmtpCredentials","children":{"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/WorkMailSmtpCredentials/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::SecretsManager::Secret","aws:cdk:cloudformation:props":{"description":"WorkMail SMTP credentials for sending emails","generateSecretString":{"secretStringTemplate":"{\"username\":\"noreply@gabi.yoga\",\"host\":\"smtp.us-west-2.awsapps.com\",\"port\":465,\"secure\":true}","generateStringKey":"password","excludePunctuation":true,"includeSpace":false,"passwordLength":32},"name":"gabi-yoga-workmail-smtp-credentials","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_secretsmanager.CfnSecret","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_secretsmanager.Secret","version":"2.192.0","metadata":[]}},"WebAppSmtpSecretAccessRole":{"id":"WebAppSmtpSecretAccessRole","path":"GabiYogaSmtpSecrets/WebAppSmtpSecretAccessRole","children":{"ImportWebAppSmtpSecretAccessRole":{"id":"ImportWebAppSmtpSecretAccessRole","path":"GabiYogaSmtpSecrets/WebAppSmtpSecretAccessRole/ImportWebAppSmtpSecretAccessRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/WebAppSmtpSecretAccessRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"}}],"Version":"2012-10-17"},"description":"Role for accessing WorkMail SMTP credentials","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}},"DefaultPolicy":{"id":"DefaultPolicy","path":"GabiYogaSmtpSecrets/WebAppSmtpSecretAccessRole/DefaultPolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/WebAppSmtpSecretAccessRole/DefaultPolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":["secretsmanager:GetSecretValue","secretsmanager:DescribeSecret"],"Effect":"Allow","Resource":{"Ref":"WorkMailSmtpCredentials04C6BE96"}}],"Version":"2012-10-17"},"policyName":"WebAppSmtpSecretAccessRoleDefaultPolicyCBD8A09B","roles":[{"Ref":"WebAppSmtpSecretAccessRoleFC1397DE"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"UpdateSmtpSecretFunction":{"id":"UpdateSmtpSecretFunction","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretFunction","children":{"ServiceRole":{"id":"ServiceRole","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/ServiceRole","children":{"ImportServiceRole":{"id":"ImportServiceRole","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/ServiceRole/ImportServiceRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/ServiceRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"}}],"Version":"2012-10-17"},"managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]]}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}},"DefaultPolicy":{"id":"DefaultPolicy","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/ServiceRole/DefaultPolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/ServiceRole/DefaultPolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":["secretsmanager:GetSecretValue","secretsmanager:DescribeSecret"],"Effect":"Allow","Resource":{"Ref":"WorkMailSmtpCredentials04C6BE96"}},{"Action":["secretsmanager:PutSecretValue","secretsmanager:UpdateSecret"],"Effect":"Allow","Resource":{"Ref":"WorkMailSmtpCredentials04C6BE96"}}],"Version":"2012-10-17"},"policyName":"UpdateSmtpSecretFunctionServiceRoleDefaultPolicy58F8FA02","roles":[{"Ref":"UpdateSmtpSecretFunctionServiceRole67572329"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Lambda::Function","aws:cdk:cloudformation:props":{"code":{"zipFile":"\nconst AWS = require('aws-sdk');\n\nexports.handler = async (event) => {\n  console.log('Event:', JSON.stringify(event, null, 2));\n  \n  if (event.RequestType === 'Create' || event.RequestType === 'Update') {\n    try {\n      // Get the secret ARN from the event properties\n      const secretArn = event.ResourceProperties.SecretArn;\n      \n      // Get the current secret value to preserve all fields\n      const secretsManager = new AWS.SecretsManager();\n      const currentSecretData = await secretsManager.getSecretValue({\n        SecretId: secretArn\n      }).promise();\n      \n      // Parse the current secret JSON\n      let currentSecret = JSON.parse(currentSecretData.SecretString);\n      \n      // Update with the properties from the event, but don't overwrite the password\n      const updatedSecret = {\n        ...currentSecret,\n        username: event.ResourceProperties.Username || currentSecret.username,\n        host: event.ResourceProperties.Host || currentSecret.host,\n        port: parseInt(event.ResourceProperties.Port || currentSecret.port, 10),\n        secure: event.ResourceProperties.Secure === 'true' || currentSecret.secure\n      };\n      \n      // Update the secret (but retain the password that was auto-generated)\n      await secretsManager.putSecretValue({\n        SecretId: secretArn,\n        SecretString: JSON.stringify(updatedSecret)\n      }).promise();\n      \n      console.log('Secret updated successfully');\n      \n      return {\n        PhysicalResourceId: secretArn,\n        Data: {\n          SecretArn: secretArn\n        }\n      };\n    } catch (error) {\n      console.error('Error updating secret:', error);\n      throw error;\n    }\n  } else if (event.RequestType === 'Delete') {\n    // Not actually deleting the secret, as it might be in use\n    // The secret has RemovalPolicy.RETAIN so it will persist\n    console.log('Secret will be retained during deletion');\n    return {\n      PhysicalResourceId: event.PhysicalResourceId\n    };\n  }\n};\n      "},"handler":"index.handler","role":{"Fn::GetAtt":["UpdateSmtpSecretFunctionServiceRole67572329","Arn"]},"runtime":"nodejs16.x","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"timeout":300}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.CfnFunction","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.Function","version":"2.192.0","metadata":[]}},"UpdateSmtpSecretProvider":{"id":"UpdateSmtpSecretProvider","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider","children":{"framework-onEvent":{"id":"framework-onEvent","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent","children":{"ServiceRole":{"id":"ServiceRole","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/ServiceRole","children":{"ImportServiceRole":{"id":"ImportServiceRole","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/ServiceRole/ImportServiceRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/ServiceRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"}}],"Version":"2012-10-17"},"managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]]}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}},"DefaultPolicy":{"id":"DefaultPolicy","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/ServiceRole/DefaultPolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":"lambda:InvokeFunction","Effect":"Allow","Resource":[{"Fn::GetAtt":["UpdateSmtpSecretFunction239BE1C8","Arn"]},{"Fn::Join":["",[{"Fn::GetAtt":["UpdateSmtpSecretFunction239BE1C8","Arn"]},":*"]]}]},{"Action":"lambda:GetFunction","Effect":"Allow","Resource":{"Fn::GetAtt":["UpdateSmtpSecretFunction239BE1C8","Arn"]}}],"Version":"2012-10-17"},"policyName":"UpdateSmtpSecretProviderframeworkonEventServiceRoleDefaultPolicy86FB7E24","roles":[{"Ref":"UpdateSmtpSecretProviderframeworkonEventServiceRoleF4884CDD"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"Code":{"id":"Code","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/Code","children":{"Stage":{"id":"Stage","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/Code/Stage","constructInfo":{"fqn":"aws-cdk-lib.AssetStaging","version":"2.192.0"}},"AssetBucket":{"id":"AssetBucket","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/Code/AssetBucket","constructInfo":{"fqn":"aws-cdk-lib.aws_s3.BucketBase","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3_assets.Asset","version":"2.192.0"}},"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Lambda::Function","aws:cdk:cloudformation:props":{"code":{"s3Bucket":"cdk-hnb659fds-assets-891709159344-us-west-2","s3Key":"bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip"},"description":"AWS CDK resource provider framework - onEvent (GabiYogaSmtpSecrets/UpdateSmtpSecretProvider)","environment":{"variables":{"USER_ON_EVENT_FUNCTION_ARN":{"Fn::GetAtt":["UpdateSmtpSecretFunction239BE1C8","Arn"]}}},"functionName":"GabiYoga-UpdateSmtpSecretProvider","handler":"framework.onEvent","role":{"Fn::GetAtt":["UpdateSmtpSecretProviderframeworkonEventServiceRoleF4884CDD","Arn"]},"runtime":"nodejs20.x","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"timeout":900}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.CfnFunction","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.Function","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.custom_resources.Provider","version":"2.192.0"}},"SmtpSecretConfig":{"id":"SmtpSecretConfig","path":"GabiYogaSmtpSecrets/SmtpSecretConfig","children":{"Provider":{"id":"Provider","path":"GabiYogaSmtpSecrets/SmtpSecretConfig/Provider","constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.SingletonFunction","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/SmtpSecretConfig/Resource","children":{"Default":{"id":"Default","path":"GabiYogaSmtpSecrets/SmtpSecretConfig/Resource/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.CustomResource","version":"2.192.0","metadata":[]}},"CustomResourcePolicy":{"id":"CustomResourcePolicy","path":"GabiYogaSmtpSecrets/SmtpSecretConfig/CustomResourcePolicy","children":{"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/SmtpSecretConfig/CustomResourcePolicy/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Policy","aws:cdk:cloudformation:props":{"policyDocument":{"Statement":[{"Action":"secretsmanager:DescribeSecret","Effect":"Allow","Resource":{"Ref":"WorkMailSmtpCredentials04C6BE96"}}],"Version":"2012-10-17"},"policyName":"SmtpSecretConfigCustomResourcePolicyD83795C4","roles":[{"Ref":"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnPolicy","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Policy","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.custom_resources.AwsCustomResource","version":"2.192.0"}},"AWS679f53fac002430cb0da5b7982bd2287":{"id":"AWS679f53fac002430cb0da5b7982bd2287","path":"GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287","children":{"ServiceRole":{"id":"ServiceRole","path":"GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole","children":{"ImportServiceRole":{"id":"ImportServiceRole","path":"GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/ImportServiceRole","constructInfo":{"fqn":"aws-cdk-lib.Resource","version":"2.192.0","metadata":[]}},"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::IAM::Role","aws:cdk:cloudformation:props":{"assumeRolePolicyDocument":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"}}],"Version":"2012-10-17"},"managedPolicyArns":[{"Fn::Join":["",["arn:",{"Ref":"AWS::Partition"},":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]]}],"tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}]}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.CfnRole","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_iam.Role","version":"2.192.0","metadata":[]}},"Code":{"id":"Code","path":"GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/Code","children":{"Stage":{"id":"Stage","path":"GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/Code/Stage","constructInfo":{"fqn":"aws-cdk-lib.AssetStaging","version":"2.192.0"}},"AssetBucket":{"id":"AssetBucket","path":"GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/Code/AssetBucket","constructInfo":{"fqn":"aws-cdk-lib.aws_s3.BucketBase","version":"2.192.0","metadata":[]}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_s3_assets.Asset","version":"2.192.0"}},"Resource":{"id":"Resource","path":"GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/Resource","attributes":{"aws:cdk:cloudformation:type":"AWS::Lambda::Function","aws:cdk:cloudformation:props":{"code":{"s3Bucket":"cdk-hnb659fds-assets-891709159344-us-west-2","s3Key":"9d043014be736e8162bcc7ec5590cc6d2ff24fd0d9c73a5c5d595151c5fdad00.zip"},"handler":"index.handler","role":{"Fn::GetAtt":["AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2","Arn"]},"runtime":"nodejs20.x","tags":[{"key":"Environment","value":"Production"},{"key":"Project","value":"GabiYoga"}],"timeout":120}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.CfnFunction","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.aws_lambda.Function","version":"2.192.0","metadata":[]}},"SmtpSecretArn":{"id":"SmtpSecretArn","path":"GabiYogaSmtpSecrets/SmtpSecretArn","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"WebAppRoleArn":{"id":"WebAppRoleArn","path":"GabiYogaSmtpSecrets/WebAppRoleArn","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"UpdateSmtpCredentialsCommands":{"id":"UpdateSmtpCredentialsCommands","path":"GabiYogaSmtpSecrets/UpdateSmtpCredentialsCommands","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}},"CDKMetadata":{"id":"CDKMetadata","path":"GabiYogaSmtpSecrets/CDKMetadata","children":{"Default":{"id":"Default","path":"GabiYogaSmtpSecrets/CDKMetadata/Default","constructInfo":{"fqn":"aws-cdk-lib.CfnResource","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"Exports":{"id":"Exports","path":"GabiYogaSmtpSecrets/Exports","children":{"Output{\"Ref\":\"WorkMailSmtpCredentials04C6BE96\"}":{"id":"Output{\"Ref\":\"WorkMailSmtpCredentials04C6BE96\"}","path":"GabiYogaSmtpSecrets/Exports/Output{\"Ref\":\"WorkMailSmtpCredentials04C6BE96\"}","constructInfo":{"fqn":"aws-cdk-lib.CfnOutput","version":"2.192.0"}}},"constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}},"BootstrapVersion":{"id":"BootstrapVersion","path":"GabiYogaSmtpSecrets/BootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnParameter","version":"2.192.0"}},"CheckBootstrapVersion":{"id":"CheckBootstrapVersion","path":"GabiYogaSmtpSecrets/CheckBootstrapVersion","constructInfo":{"fqn":"aws-cdk-lib.CfnRule","version":"2.192.0"}}},"constructInfo":{"fqn":"aws-cdk-lib.Stack","version":"2.192.0"}},"Tree":{"id":"Tree","path":"Tree","constructInfo":{"fqn":"constructs.Construct","version":"10.4.2"}}},"constructInfo":{"fqn":"aws-cdk-lib.App","version":"2.192.0"}}}