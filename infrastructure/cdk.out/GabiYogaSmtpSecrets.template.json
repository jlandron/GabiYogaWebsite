{
 "Resources": {
  "WorkMailSmtpCredentials04C6BE96": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "WorkMail SMTP credentials for sending emails",
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "GenerateStringKey": "password",
     "IncludeSpace": false,
     "PasswordLength": 32,
     "SecretStringTemplate": "{\"username\":\"noreply@gabi.yoga\",\"host\":\"smtp.us-west-2.awsapps.com\",\"port\":465,\"secure\":true}"
    },
    "Name": "gabi-yoga-workmail-smtp-credentials",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/WorkMailSmtpCredentials/Resource"
   }
  },
  "WebAppSmtpSecretAccessRoleFC1397DE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for accessing WorkMail SMTP credentials",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/WebAppSmtpSecretAccessRole/Resource"
   }
  },
  "WebAppSmtpSecretAccessRoleDefaultPolicyCBD8A09B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "WorkMailSmtpCredentials04C6BE96"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WebAppSmtpSecretAccessRoleDefaultPolicyCBD8A09B",
    "Roles": [
     {
      "Ref": "WebAppSmtpSecretAccessRoleFC1397DE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/WebAppSmtpSecretAccessRole/DefaultPolicy/Resource"
   }
  },
  "UpdateSmtpSecretFunctionServiceRole67572329": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/ServiceRole/Resource"
   }
  },
  "UpdateSmtpSecretFunctionServiceRoleDefaultPolicy58F8FA02": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "WorkMailSmtpCredentials04C6BE96"
       }
      },
      {
       "Action": [
        "secretsmanager:PutSecretValue",
        "secretsmanager:UpdateSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "WorkMailSmtpCredentials04C6BE96"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UpdateSmtpSecretFunctionServiceRoleDefaultPolicy58F8FA02",
    "Roles": [
     {
      "Ref": "UpdateSmtpSecretFunctionServiceRole67572329"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UpdateSmtpSecretFunction239BE1C8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\nconst AWS = require('aws-sdk');\n\nexports.handler = async (event) => {\n  console.log('Event:', JSON.stringify(event, null, 2));\n  \n  if (event.RequestType === 'Create' || event.RequestType === 'Update') {\n    try {\n      // Get the secret ARN from the event properties\n      const secretArn = event.ResourceProperties.SecretArn;\n      \n      // Get the current secret value to preserve all fields\n      const secretsManager = new AWS.SecretsManager();\n      const currentSecretData = await secretsManager.getSecretValue({\n        SecretId: secretArn\n      }).promise();\n      \n      // Parse the current secret JSON\n      let currentSecret = JSON.parse(currentSecretData.SecretString);\n      \n      // Update with the properties from the event, but don't overwrite the password\n      const updatedSecret = {\n        ...currentSecret,\n        username: event.ResourceProperties.Username || currentSecret.username,\n        host: event.ResourceProperties.Host || currentSecret.host,\n        port: parseInt(event.ResourceProperties.Port || currentSecret.port, 10),\n        secure: event.ResourceProperties.Secure === 'true' || currentSecret.secure\n      };\n      \n      // Update the secret (but retain the password that was auto-generated)\n      await secretsManager.putSecretValue({\n        SecretId: secretArn,\n        SecretString: JSON.stringify(updatedSecret)\n      }).promise();\n      \n      console.log('Secret updated successfully');\n      \n      return {\n        PhysicalResourceId: secretArn,\n        Data: {\n          SecretArn: secretArn\n        }\n      };\n    } catch (error) {\n      console.error('Error updating secret:', error);\n      throw error;\n    }\n  } else if (event.RequestType === 'Delete') {\n    // Not actually deleting the secret, as it might be in use\n    // The secret has RemovalPolicy.RETAIN so it will persist\n    console.log('Secret will be retained during deletion');\n    return {\n      PhysicalResourceId: event.PhysicalResourceId\n    };\n  }\n};\n      "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "UpdateSmtpSecretFunctionServiceRole67572329",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "UpdateSmtpSecretFunctionServiceRoleDefaultPolicy58F8FA02",
    "UpdateSmtpSecretFunctionServiceRole67572329"
   ],
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/UpdateSmtpSecretFunction/Resource"
   }
  },
  "UpdateSmtpSecretProviderframeworkonEventServiceRoleF4884CDD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "UpdateSmtpSecretProviderframeworkonEventServiceRoleDefaultPolicy86FB7E24": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UpdateSmtpSecretFunction239BE1C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UpdateSmtpSecretFunction239BE1C8",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:GetFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UpdateSmtpSecretFunction239BE1C8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UpdateSmtpSecretProviderframeworkonEventServiceRoleDefaultPolicy86FB7E24",
    "Roles": [
     {
      "Ref": "UpdateSmtpSecretProviderframeworkonEventServiceRoleF4884CDD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UpdateSmtpSecretProviderframeworkonEvent76CB74F5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-891709159344-us-west-2",
     "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (GabiYogaSmtpSecrets/UpdateSmtpSecretProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "UpdateSmtpSecretFunction239BE1C8",
        "Arn"
       ]
      }
     }
    },
    "FunctionName": "GabiYoga-UpdateSmtpSecretProvider",
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "UpdateSmtpSecretProviderframeworkonEventServiceRoleF4884CDD",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "UpdateSmtpSecretProviderframeworkonEventServiceRoleDefaultPolicy86FB7E24",
    "UpdateSmtpSecretProviderframeworkonEventServiceRoleF4884CDD"
   ],
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/UpdateSmtpSecretProvider/framework-onEvent/Resource",
    "aws:asset:path": "asset.bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SmtpSecretConfig529D5BFB": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"SecretsManager\",\"action\":\"describeSecret\",\"parameters\":{\"SecretId\":\"",
       {
        "Ref": "WorkMailSmtpCredentials04C6BE96"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "WorkMailSmtpCredentials04C6BE96"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"SecretsManager\",\"action\":\"describeSecret\",\"parameters\":{\"SecretId\":\"",
       {
        "Ref": "WorkMailSmtpCredentials04C6BE96"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "WorkMailSmtpCredentials04C6BE96"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "SmtpSecretConfigCustomResourcePolicyD83795C4"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/SmtpSecretConfig/Resource/Default"
   }
  },
  "SmtpSecretConfigCustomResourcePolicyD83795C4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:DescribeSecret",
       "Effect": "Allow",
       "Resource": {
        "Ref": "WorkMailSmtpCredentials04C6BE96"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SmtpSecretConfigCustomResourcePolicyD83795C4",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/SmtpSecretConfig/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-891709159344-us-west-2",
     "S3Key": "9d043014be736e8162bcc7ec5590cc6d2ff24fd0d9c73a5c5d595151c5fdad00.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "Project",
      "Value": "GabiYoga"
     }
    ],
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.9d043014be736e8162bcc7ec5590cc6d2ff24fd0d9c73a5c5d595151c5fdad00",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VPyW7CMBD9Fu6ToaSXcgSkXkHhAyLjTCMTL5XHBlWW/x3HoaiVRnrbaJYWN9sW31bizo0cpkarC6ZzEHKCYvWJSXoKbIQVI/kSVQ2HL7uwDEoYTJ3TNJsVT04r+TPLhWXQwlwGgekzWhmUs3P24mdlR03BvZwM/N4L5rIXdzMUjfsoJwp7wZShI3bRSwIZOTjT+6dmTCfvbmogD7s7H2r625yhziq/jWUh/A/r7X/4MYbvWJ6zbiC88vq2+cBS7erKSjU+2qAMYbfgA9rxXh1EAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "GabiYogaSmtpSecrets/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "SmtpSecretArn": {
   "Description": "ARN of the WorkMail SMTP credentials secret",
   "Value": {
    "Ref": "WorkMailSmtpCredentials04C6BE96"
   }
  },
  "WebAppRoleArn": {
   "Description": "ARN of the IAM role that can access the SMTP secret",
   "Value": {
    "Fn::GetAtt": [
     "WebAppSmtpSecretAccessRoleFC1397DE",
     "Arn"
    ]
   }
  },
  "UpdateSmtpCredentialsCommands": {
   "Description": "Commands to update the WorkMail SMTP credentials",
   "Value": {
    "Fn::Join": [
     "",
     [
      "\n=== HOW TO UPDATE WORKMAIL SMTP CREDENTIALS ===\n\n1. After setting up your WorkMail users, update the SMTP password in Secrets Manager:\n\naws secretsmanager get-secret-value --secret-id ",
      {
       "Fn::Join": [
        "-",
        [
         {
          "Fn::Select": [
           0,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       ]
      },
      " --query SecretString --output text | jq .\n\n# Then update with your actual WorkMail password:\naws secretsmanager update-secret --secret-id ",
      {
       "Fn::Join": [
        "-",
        [
         {
          "Fn::Select": [
           0,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "WorkMailSmtpCredentials04C6BE96"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       ]
      },
      " \\\n  --secret-string '{\"username\":\"noreply@gabi.yoga\",\"host\":\"smtp.us-west-2.awsapps.com\",\"port\":465,\"secure\":true,\"password\":\"YOUR_ACTUAL_WORKMAIL_PASSWORD\"}'\n\n2. The application will automatically retrieve these credentials when sending emails.\n      "
     ]
    ]
   }
  },
  "ExportsOutputRefWorkMailSmtpCredentials04C6BE9682036239": {
   "Value": {
    "Ref": "WorkMailSmtpCredentials04C6BE96"
   },
   "Export": {
    "Name": "GabiYogaSmtpSecrets:ExportsOutputRefWorkMailSmtpCredentials04C6BE9682036239"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}